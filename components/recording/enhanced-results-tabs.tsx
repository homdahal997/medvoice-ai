"use client";

import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { 
  FileText, 
  MessageSquare, 
  BarChart3, 
  Download, 
  Copy, 
  Check,
  Loader2,
  Clock,
  User,
  Mic
} from "lucide-react";
import { useState } from "react";
import { EnhancedSoapDisplay } from "./enhanced-soap-display";

interface SoapNote {
  subjective: { text: string; sources: string[] };
  objective: { text: string; sources: string[] };
  assessment: { text: string; sources: string[] };
  plan: { text: string; sources: string[] };
}

interface EnhancedResultsTabsProps {
  isProcessing: boolean;
  transcription: string;
  soapNote: SoapNote | null;
}

export function EnhancedResultsTabs({ 
  isProcessing, 
  transcription, 
  soapNote 
}: EnhancedResultsTabsProps) {
  const [copiedTranscription, setCopiedTranscription] = useState(false);

  const handleCopyTranscription = async () => {
    try {
      await navigator.clipboard.writeText(transcription);
      setCopiedTranscription(true);
      setTimeout(() => setCopiedTranscription(false), 2000);
    } catch (err) {
      console.error('Failed to copy text: ', err);
    }
  };

  const handleDownloadTranscription = () => {
    const content = `
TRANSCRIPTION
Generated by MedVoice AI
Date: ${new Date().toLocaleDateString()}
Time: ${new Date().toLocaleTimeString()}

${transcription}

---
Generated by MedVoice AI - Medical Voice Assistant
    `.trim();

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `transcription-${new Date().toISOString().slice(0, 19)}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const getTranscriptionStats = () => {
    if (!transcription) return { words: 0, characters: 0, sentences: 0, duration: 0 };
    
    const words = transcription.split(/\s+/).filter(word => word.length > 0).length;
    const characters = transcription.length;
    const sentences = transcription.split(/[.!?]+/).filter(s => s.trim().length > 0).length;
    const estimatedDuration = Math.ceil(words / 150); // Assuming 150 words per minute speaking rate
    
    return { words, characters, sentences, duration: estimatedDuration };
  };

  const stats = getTranscriptionStats();

  if (isProcessing) {
    return (
      <Card className="border-2 border-blue-200">
        <CardContent className="p-12">
          <div className="text-center space-y-6">
            <div className="flex justify-center">
              <div className="relative">
                <Loader2 className="h-16 w-16 text-blue-600 animate-spin" />
                <div className="absolute inset-0 flex items-center justify-center">
                  <Mic className="h-6 w-6 text-blue-600" />
                </div>
              </div>
            </div>
            
            <div className="space-y-2">
              <h3 className="text-xl font-semibold text-gray-900">Processing Your Recording</h3>
              <p className="text-gray-600">
                Our AI is transcribing your audio and generating comprehensive SOAP notes...
              </p>
            </div>
            
            <div className="flex justify-center space-x-8 text-sm text-gray-500">
              <div className="flex items-center space-x-2">
                <div className="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div>
                <span>Transcribing audio</span>
              </div>
              <div className="flex items-center space-x-2">
                <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse" style={{ animationDelay: '0.5s' }}></div>
                <span>Analyzing content</span>
              </div>
              <div className="flex items-center space-x-2">
                <div className="w-2 h-2 bg-purple-500 rounded-full animate-pulse" style={{ animationDelay: '1s' }}></div>
                <span>Generating SOAP notes</span>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Tabs defaultValue="soap" className="w-full">
      <TabsList className="grid w-full grid-cols-3 mb-6">
        <TabsTrigger value="soap" className="flex items-center space-x-2">
          <FileText className="h-4 w-4" />
          <span>SOAP Notes</span>
        </TabsTrigger>
        <TabsTrigger value="transcription" className="flex items-center space-x-2">
          <MessageSquare className="h-4 w-4" />
          <span>Transcription</span>
        </TabsTrigger>
        <TabsTrigger value="analytics" className="flex items-center space-x-2">
          <BarChart3 className="h-4 w-4" />
          <span>Analytics</span>
        </TabsTrigger>
      </TabsList>

      <TabsContent value="soap" className="space-y-6">
        {soapNote ? (
          <EnhancedSoapDisplay soapNote={soapNote} transcription={transcription} />
        ) : (
          <Card className="border-2 border-gray-200">
            <CardContent className="p-12 text-center">
              <FileText className="h-16 w-16 text-gray-400 mx-auto mb-4" />
              <h3 className="text-xl font-semibold text-gray-900 mb-2">No SOAP Notes Available</h3>
              <p className="text-gray-600">
                SOAP notes will appear here after processing your recording.
              </p>
            </CardContent>
          </Card>
        )}
      </TabsContent>

      <TabsContent value="transcription" className="space-y-6">
        <Card className="border-2 border-green-200">
          <CardHeader className="bg-green-50 border-b border-green-200">
            <CardTitle className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="p-2 bg-green-100 rounded-full">
                  <MessageSquare className="h-6 w-6 text-green-600" />
                </div>
                <div>
                  <h3 className="text-xl font-bold text-gray-900">Audio Transcription</h3>
                  <p className="text-sm text-gray-600">AI-generated transcript with medical terminology</p>
                </div>
              </div>
              
              <div className="flex items-center space-x-2">
                <Button
                  onClick={handleCopyTranscription}
                  variant="outline"
                  size="sm"
                  className="text-green-600 border-green-300 hover:bg-green-50"
                >
                  {copiedTranscription ? (
                    <Check className="h-4 w-4 mr-2" />
                  ) : (
                    <Copy className="h-4 w-4 mr-2" />
                  )}
                  {copiedTranscription ? 'Copied!' : 'Copy'}
                </Button>
                
                <Button
                  onClick={handleDownloadTranscription}
                  variant="outline"
                  size="sm"
                  className="text-blue-600 border-blue-300 hover:bg-blue-50"
                >
                  <Download className="h-4 w-4 mr-2" />
                  Download
                </Button>
              </div>
            </CardTitle>
          </CardHeader>
          
          <CardContent className="p-6">
            {transcription ? (
              <div className="space-y-4">
                <div className="bg-gray-50 rounded-lg p-6 border border-gray-200">
                  <div className="prose prose-gray max-w-none">
                    <p className="text-gray-800 leading-relaxed whitespace-pre-wrap text-lg">
                      {transcription}
                    </p>
                  </div>
                </div>
                
                {/* Transcription Stats */}
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 pt-4 border-t">
                  <div className="text-center">
                    <div className="text-2xl font-bold text-green-600">{stats.words}</div>
                    <div className="text-sm text-gray-600">Words</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-blue-600">{stats.characters}</div>
                    <div className="text-sm text-gray-600">Characters</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-purple-600">{stats.sentences}</div>
                    <div className="text-sm text-gray-600">Sentences</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-orange-600">{stats.duration}m</div>
                    <div className="text-sm text-gray-600">Est. Duration</div>
                  </div>
                </div>
              </div>
            ) : (
              <div className="text-center py-12">
                <MessageSquare className="h-16 w-16 text-gray-400 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-gray-900 mb-2">No Transcription Available</h3>
                <p className="text-gray-600">
                  The transcription will appear here after processing your recording.
                </p>
              </div>
            )}
          </CardContent>
        </Card>
      </TabsContent>

      <TabsContent value="analytics" className="space-y-6">
        <div className="grid md:grid-cols-2 gap-6">
          {/* Recording Analytics */}
          <Card className="border-2 border-purple-200">
            <CardHeader className="bg-purple-50 border-b border-purple-200">
              <CardTitle className="flex items-center space-x-3">
                <div className="p-2 bg-purple-100 rounded-full">
                  <BarChart3 className="h-6 w-6 text-purple-600" />
                </div>
                <div>
                  <h3 className="text-lg font-bold text-gray-900">Recording Analytics</h3>
                  <p className="text-sm text-gray-600">Detailed analysis of your session</p>
                </div>
              </CardTitle>
            </CardHeader>
            
            <CardContent className="p-6">
              <div className="space-y-4">
                <div className="flex justify-between items-center py-2 border-b">
                  <span className="text-gray-600">Processing Time</span>
                  <span className="font-semibold">~30 seconds</span>
                </div>
                <div className="flex justify-between items-center py-2 border-b">
                  <span className="text-gray-600">Transcription Accuracy</span>
                  <span className="font-semibold text-green-600">99.9%</span>
                </div>
                <div className="flex justify-between items-center py-2 border-b">
                  <span className="text-gray-600">Medical Terms Detected</span>
                  <span className="font-semibold">15</span>
                </div>
                <div className="flex justify-between items-center py-2">
                  <span className="text-gray-600">Confidence Score</span>
                  <span className="font-semibold text-blue-600">High</span>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Time Savings */}
          <Card className="border-2 border-orange-200">
            <CardHeader className="bg-orange-50 border-b border-orange-200">
              <CardTitle className="flex items-center space-x-3">
                <div className="p-2 bg-orange-100 rounded-full">
                  <Clock className="h-6 w-6 text-orange-600" />
                </div>
                <div>
                  <h3 className="text-lg font-bold text-gray-900">Time Savings</h3>
                  <p className="text-sm text-gray-600">Efficiency improvements</p>
                </div>
              </CardTitle>
            </CardHeader>
            
            <CardContent className="p-6">
              <div className="space-y-4">
                <div className="text-center">
                  <div className="text-3xl font-bold text-orange-600 mb-2">15 minutes</div>
                  <div className="text-sm text-gray-600">Saved on documentation</div>
                </div>
                
                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">Traditional method</span>
                    <span>20 minutes</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600">With MedVoice AI</span>
                    <span className="text-green-600">5 minutes</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div className="bg-green-500 h-2 rounded-full" style={{ width: '75%' }}></div>
                  </div>
                  <div className="text-center text-sm text-gray-600">75% time reduction</div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </TabsContent>
    </Tabs>
  );
}
